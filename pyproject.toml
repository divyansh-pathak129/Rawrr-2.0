[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "creator-scraper"
version = "1.0.0"
description = "A production-ready Python package for scraping Instagram and LinkedIn creator profiles"
authors = [
    {name = "Creator Scraper Team", email = "team@creatorscraper.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.2",
    "supabase>=2.3.0",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "playwright>=1.40.0",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
    "rq>=1.15.1",
    "redis>=5.0.1",
    "asyncio-throttle>=1.0.2",
    "pandas>=2.1.4",
    "numpy>=1.24.3",
    "tenacity>=8.2.3",
    "loguru>=0.7.2",
    "user-agents>=2.2.0",
    "fake-useragent>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "httpx-mock>=0.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "safety>=2.3.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/creator-scraper"
Documentation = "https://github.com/your-repo/creator-scraper/wiki"
Repository = "https://github.com/your-repo/creator-scraper.git"
Issues = "https://github.com/your-repo/creator-scraper/issues"

[project.scripts]
creator-scraper = "creatorscraper.cli:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "supabase.*",
    "rq.*",
    "redis.*",
    "user_agents.*",
    "fake_useragent.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["creatorscraper/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=creatorscraper",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["creatorscraper"]
omit = [
    "creatorscraper/tests/*",
    "creatorscraper/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
